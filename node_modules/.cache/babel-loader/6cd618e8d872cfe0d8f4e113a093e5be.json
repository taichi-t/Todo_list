{"ast":null,"code":"var _jsxFileName = \"/Users/tsujiokataichi/Desktop/udemy-react-redux-crud-application/src/components/App.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { increment, decrement } from '../actions';\nimport { dispatch } from 'rxjs/internal/observable/pairs';\n\nclass App extends Component {\n  render() {\n    const props = this.props;\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    }, \"value: \", props.value), React.createElement(\"button\", {\n      onClick: props.increment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"+1\"), React.createElement(\"button\", {\n      onClick: props.decrement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, \"-1\"));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  value: state.count.value\n});\n\nconst mapDispatchToProps = dispatch => ({\n  increment: () => dispatch(increment()),\n  decrement: () => dispatch(decrement())\n});\n\nexport default conect(mapStateToProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["/Users/tsujiokataichi/Desktop/udemy-react-redux-crud-application/src/components/App.js"],"names":["React","Component","connect","increment","decrement","dispatch","App","render","props","value","mapStateToProps","state","count","mapDispatchToProps","conect"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,SAAT,EAAoBC,SAApB,QAAqC,YAArC;AACA,SAASC,QAAT,QAAyB,gCAAzB;;AAEA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,MAAM,GAAE;AACN,UAAMC,KAAK,GAAG,KAAKA,KAAnB;AACF,WACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAaA,KAAK,CAACC,KAAnB,CADF,EAEE;AAAQ,MAAA,OAAO,EAAED,KAAK,CAACL,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAGE;AAAQ,MAAA,OAAO,EAAEK,KAAK,CAACJ,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,CADF;AAOC;;AAVyB;;AAa5B,MAAMM,eAAe,GAAGC,KAAK,KAAK;AAAEF,EAAAA,KAAK,EAAEE,KAAK,CAACC,KAAN,CAAYH;AAArB,CAAL,CAA7B;;AAEA,MAAMI,kBAAkB,GAAGR,QAAQ,KAAK;AACtCF,EAAAA,SAAS,EAAE,MAAME,QAAQ,CAACF,SAAS,EAAV,CADa;AAEtCC,EAAAA,SAAS,EAAE,MAAMC,QAAQ,CAACD,SAAS,EAAV;AAFa,CAAL,CAAnC;;AAKA,eAAeU,MAAM,CAAEJ,eAAF,EAAmBG,kBAAnB,CAAN,CAA6CP,GAA7C,CAAf","sourcesContent":["import React,{Component} from 'react';\nimport { connect } from 'react-redux'\n\nimport { increment, decrement } from '../actions'\nimport { dispatch } from 'rxjs/internal/observable/pairs';\n\nclass App extends Component {\n  render(){\n    const props = this.props\n  return(\n    <React.Fragment>\n      <div>value: {props.value}</div>\n      <button onClick={props.increment}>+1</button>\n      <button onClick={props.decrement}>-1</button>\n    </React.Fragment>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({ value: state.count.value })\n\nconst mapDispatchToProps = dispatch => ({\n  increment: () => dispatch(increment()),\n  decrement: () => dispatch(decrement()),\n})\n\nexport default conect (mapStateToProps, mapDispatchToProps)(App)\n\n"]},"metadata":{},"sourceType":"module"}