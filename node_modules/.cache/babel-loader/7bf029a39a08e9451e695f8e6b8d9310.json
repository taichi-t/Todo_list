{"ast":null,"code":"import axios from 'axios';\nexport const READ_EVENTS = 'READ_EVENTS';\nexport const READ_EVENT = 'READ_EVENT';\nexport const CREATE_EVENTS = 'CREATE_EVENTS';\nexport const DELETE_EVENTS = 'DELETE_EVENTS';\nconst ROOT_URL = 'https://udemy-utils.herokuapp.com/api/v1';\nconst QUERYSTRING = '?token=token123';\nexport const readEvents = () => async dispatch => {\n  const response = await axios.get(\"\\b\".concat(ROOT_URL, \"/events\").concat(QUERYSTRING));\n  dispatch({\n    type: READ_EVENTS,\n    response\n  });\n};\nexport const postEvent = values => async dispatch => {\n  const response = await axios.post(\"\\b\".concat(ROOT_URL, \"/events\").concat(QUERYSTRING), values);\n  dispatch({\n    type: CREATE_EVENTS,\n    response\n  });\n};\nexport const putEvent = values => async dispatch => {\n  const response = await axios.put(\"\\b\".concat(ROOT_URL, \"/events/\").concat(id).concat(QUERYSTRING), values);\n  dispatchEvent({\n    type: UPDATE_EVENT,\n    response\n  });\n};\nexport const getEvent = id => async dispatch => {\n  const response = await axios.get(\"\\b\".concat(ROOT_URL, \"/events/\").concat(id).concat(QUERYSTRING));\n  dispatch({\n    type: READ_EVENT,\n    response\n  });\n};\nexport const deleteEvent = id => async dispatch => {\n  await axios.delete(\"\\b\".concat(ROOT_URL, \"/events/\").concat(id).concat(QUERYSTRING));\n  dispatch({\n    type: DELETE_EVENTS,\n    id\n  });\n};","map":{"version":3,"sources":["/Users/tsujiokataichi/Desktop/udemy-react-redux-crud-application/src/actions/index.js"],"names":["axios","READ_EVENTS","READ_EVENT","CREATE_EVENTS","DELETE_EVENTS","ROOT_URL","QUERYSTRING","readEvents","dispatch","response","get","type","postEvent","values","post","putEvent","put","id","dispatchEvent","UPDATE_EVENT","getEvent","deleteEvent","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAEP,MAAMC,QAAQ,GAAG,0CAAjB;AACA,MAAMC,WAAW,GAAG,iBAApB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC9C,QAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,aAAcL,QAAd,oBAAgCC,WAAhC,EAAvB;AACAE,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEV,WAAR;AAAqBQ,IAAAA;AAArB,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMG,SAAS,GAAGC,MAAM,IAAI,MAAML,QAAN,IAAkB;AACjD,QAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACc,IAAN,aAAeT,QAAf,oBAAiCC,WAAjC,GAAgDO,MAAhD,CAAvB;AACAL,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAER,aAAR;AAAuBM,IAAAA;AAAvB,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMM,QAAQ,GAAGF,MAAM,IAAI,MAAML,QAAN,IAAiB;AAC/C,QAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACgB,GAAN,aAAcX,QAAd,qBAAiCY,EAAjC,SAAsCX,WAAtC,GAAqDO,MAArD,CAAvB;AACAK,EAAAA,aAAa,CAAC;AAACP,IAAAA,IAAI,EAAEQ,YAAP;AAAqBV,IAAAA;AAArB,GAAD,CAAb;AACH,CAHM;AAKP,OAAO,MAAMW,QAAQ,GAAGH,EAAE,IAAI,MAAMT,QAAN,IAAiB;AAC3C,QAAMC,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAN,aAAcL,QAAd,qBAAiCY,EAAjC,SAAsCX,WAAtC,EAAvB;AACAE,EAAAA,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAET,UAAP;AAAmBO,IAAAA;AAAnB,GAAD,CAAR;AACH,CAHM;AAKP,OAAO,MAAMY,WAAW,GAAGJ,EAAE,IAAI,MAAMT,QAAN,IAAkB;AAC/C,QAAMR,KAAK,CAACsB,MAAN,aAAiBjB,QAAjB,qBAAoCY,EAApC,SAAyCX,WAAzC,EAAN;AACAE,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEP,aAAR;AAAuBa,IAAAA;AAAvB,GAAD,CAAR;AACH,CAHM","sourcesContent":["import axios from 'axios'\n\nexport const READ_EVENTS = 'READ_EVENTS'\nexport const READ_EVENT = 'READ_EVENT'\nexport const CREATE_EVENTS = 'CREATE_EVENTS'\nexport const DELETE_EVENTS = 'DELETE_EVENTS'\n\nconst ROOT_URL = 'https://udemy-utils.herokuapp.com/api/v1'\nconst QUERYSTRING = '?token=token123'\n\nexport const readEvents = () => async dispatch => {\n    const response = await axios.get(`\b${ROOT_URL}/events${QUERYSTRING}`)\n    dispatch({ type: READ_EVENTS, response })\n}\n\nexport const postEvent = values => async dispatch => {\n    const response = await axios.post(`\b${ROOT_URL}/events${QUERYSTRING}`, values)\n    dispatch({ type: CREATE_EVENTS, response })\n}\n\nexport const putEvent = values => async dispatch =>{\n    const response = await axios.put(`\b${ROOT_URL}/events/${id}${QUERYSTRING}`, values)\n    dispatchEvent({type: UPDATE_EVENT, response})\n}\n\nexport const getEvent = id => async dispatch =>{\n    const response = await axios.get(`\b${ROOT_URL}/events/${id}${QUERYSTRING}`)\n    dispatch({type: READ_EVENT, response})\n}\n\nexport const deleteEvent = id => async dispatch => {\n    await axios.delete(`\b${ROOT_URL}/events/${id}${QUERYSTRING}`)\n    dispatch({ type: DELETE_EVENTS, id})\n}\n\n"]},"metadata":{},"sourceType":"module"}