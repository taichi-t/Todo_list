{"ast":null,"code":"var _jsxFileName = \"/Users/tsujiokataichi/Desktop/udemy-react-redux-crud-application/src/components/events_show.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Field, reduxForm } from 'redux-form';\nimport { Link } from 'react-router-dom';\nimport { getEvent, deleteEvent, putEvent } from '../actions';\nimport { id } from 'postcss-selector-parser';\n\nclass EventsShow extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onDeleteClick = this.onDeleteClick.bind(this);\n  }\n\n  renderField(field) {\n    const input = field.input,\n          label = field.label,\n          type = field.type,\n          _field$meta = field.meta,\n          touched = _field$meta.touched,\n          error = _field$meta.error;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"input\", Object.assign({}, input, {\n      placeholder: label,\n      type: type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    })), touched && error && React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, error));\n  }\n\n  async onDeleteClick() {\n    const id = this.props.match.params.id;\n    await this.props.deleteEvent(id);\n    this.props.history.push(\"/\");\n  }\n\n  async onSubmit(values) {\n    // await this.props.postEvent(values)\n    this.props.history.push(\"/\");\n  }\n\n  render() {\n    const _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          pristine = _this$props.pristine,\n          submitting = _this$props.submitting;\n    console.log(submitting);\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, \" \", React.createElement(Field, {\n      label: \"Title\",\n      name: \"title\",\n      type: \"text\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \" \", React.createElement(Field, {\n      label: \"Body\",\n      name: \"body\",\n      type: \"text\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      disabled: pristine || submitting,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Link, {\n      to: \"/\",\n      onClick: this.onDeleteClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, \"Delete\")));\n  }\n\n}\n\nconst validate = values => {\n  const errors = {};\n  if (!values.title) errors.title = \"Enter a title, please.\";\n  if (!values.body) errors.body = \"Enter a body, please.\";\n  return errors;\n};\n\nconst mapDispatchToProps = {\n  deleteEvent\n};\nexport default connect(null, mapDispatchToProps)(reduxForm({\n  validate,\n  form: 'eventShowForm'\n})(EventsShow));","map":{"version":3,"sources":["/Users/tsujiokataichi/Desktop/udemy-react-redux-crud-application/src/components/events_show.js"],"names":["React","Component","connect","Field","reduxForm","Link","getEvent","deleteEvent","putEvent","id","EventsShow","constructor","props","onSubmit","bind","onDeleteClick","renderField","field","input","label","type","meta","touched","error","match","params","history","push","values","render","handleSubmit","pristine","submitting","console","log","validate","errors","title","body","mapDispatchToProps","form"],"mappings":"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","sourcesContent":["import React,{Component} from 'react';\nimport { connect } from 'react-redux'\nimport { Field, reduxForm} from 'redux-form'\nimport { Link } from 'react-router-dom'\n\nimport { getEvent, deleteEvent, putEvent } from '../actions'\nimport { id } from 'postcss-selector-parser';\n\nclass EventsShow extends Component {\n  constructor(props){\n    super(props)\n    this.onSubmit = this.onSubmit.bind(this)\n    this.onDeleteClick = this.onDeleteClick.bind(this)\n\n  }\n  renderField(field){\n    const {input, label, type, meta: {touched, error } } = field\n\n    return (\n      <div>\n        <input {...input} placeholder={label} type={type}/>\n        {touched && error && <span>{error}</span>}\n      </div>\n    )\n  }\n\n  async onDeleteClick(){\n    const {id} = this.props.match.params\n    await this.props.deleteEvent(id)\n    this.props.history.push(\"/\")\n  }\n\n  async onSubmit(values){\n    // await this.props.postEvent(values)\n    this.props.history.push(\"/\")\n  }\n\n  render(){\n    const { handleSubmit,pristine,submitting　}= this.props\n    console.log(submitting)\n  return(\n    <form onSubmit={handleSubmit(this.onSubmit)}>   \n      <div> <Field label=\"Title\" name=\"title\" type=\"text\" component={this.renderField}/></div> \n      <div> <Field label=\"Body\" name=\"body\" type=\"text\" component={this.renderField}/></div> \n\n      <div>\n        <input type=\"submit\" value=\"Submit\" disabled={pristine || submitting} />\n        <Link to=\"/\" >Cancel</Link>\n        <Link to=\"/\" onClick={this.onDeleteClick}>Delete</Link>\n      </div>\n    </form>      \n     )\n  }\n}\n\nconst validate = values =>{\n  const errors =　{}\n\n  if(!values.title) errors.title = \"Enter a title, please.\"\n  if(!values.body) errors.body = \"Enter a body, please.\"\n\n  return errors\n}\n\nconst mapDispatchToProps =({ deleteEvent })\n\nexport default connect (null, mapDispatchToProps)\n(reduxForm({ validate, form: 'eventShowForm'})(EventsShow)\n)\n\n\n"]},"metadata":{},"sourceType":"module"}