{"ast":null,"code":"var _jsxFileName = \"/Users/tsujiokataichi/Desktop/udemy-react-redux-crud-application/src/components/events_show.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Link } from \"react-router-dom\";\nimport { getEvent, deleteEvent, putEvent } from \"../actions\";\nimport { id } from \"postcss-selector-parser\";\nimport RaisedButton from \"material-ui/RaisedButton\";\nimport TextField from \"material-ui/TextField\";\n\nclass EventsShow extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onDeleteClick = this.onDeleteClick.bind(this);\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.id;\n    if (id) this.props.getEvent(id);\n  }\n\n  renderField(field) {\n    const input = field.input,\n          label = field.label,\n          type = field.type,\n          _field$meta = field.meta,\n          touched = _field$meta.touched,\n          error = _field$meta.error;\n    return React.createElement(TextField, Object.assign({\n      hintText: label,\n      floatingLabelText: label,\n      type: type,\n      errorText: touched && error\n    }, input, {\n      fullWidth: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }));\n  }\n\n  async onDeleteClick() {\n    const id = this.props.match.params.id;\n    await this.props.deleteEvent(id);\n    this.props.history.push(\"/\");\n  }\n\n  async onSubmit(values) {\n    await this.props.putEvent(values);\n    this.props.history.push(\"/\");\n  }\n\n  render() {\n    const _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          pristine = _this$props.pristine,\n          submitting = _this$props.submitting,\n          invalid = _this$props.invalid;\n    return React.createElement(\"form\", {\n      onSubmit: handleSubmit(this.onSubmit),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \" \", React.createElement(Field, {\n      label: \"Title\",\n      name: \"title\",\n      type: \"text\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, \" \", React.createElement(Field, {\n      label: \"Body\",\n      name: \"body\",\n      type: \"text\",\n      component: this.renderField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Submit\",\n      disabled: pristine || submitting || invalid,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(Link, {\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Cancel\"), React.createElement(Link, {\n      to: \"/\",\n      onClick: this.onDeleteClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Delete\")));\n  }\n\n}\n\nconst validate = values => {\n  const errors = {};\n  if (!values.title) errors.title = \"Enter a title, please.\";\n  if (!values.body) errors.body = \"Enter a body, please.\";\n  return errors;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const event = state.events[ownProps.match.params.id];\n  return {\n    initialValues: event,\n    event\n  };\n};\n\nconst mapDispatchToProps = {\n  deleteEvent,\n  getEvent,\n  putEvent\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\n  validate,\n  form: \"eventShowForm\",\n  enableReinitialize: true\n})(EventsShow));","map":{"version":3,"sources":["/Users/tsujiokataichi/Desktop/udemy-react-redux-crud-application/src/components/events_show.js"],"names":["React","Component","connect","Field","reduxForm","Link","getEvent","deleteEvent","putEvent","id","RaisedButton","TextField","EventsShow","constructor","props","onSubmit","bind","onDeleteClick","componentDidMount","match","params","renderField","field","input","label","type","meta","touched","error","history","push","values","render","handleSubmit","pristine","submitting","invalid","validate","errors","title","body","mapStateToProps","state","ownProps","event","events","initialValues","mapDispatchToProps","form","enableReinitialize"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { Link } from \"react-router-dom\";\n\nimport { getEvent, deleteEvent, putEvent } from \"../actions\";\nimport { id } from \"postcss-selector-parser\";\n\nimport RaisedButton from \"material-ui/RaisedButton\";\nimport TextField from \"material-ui/TextField\";\n\nclass EventsShow extends Component {\n  constructor(props) {\n    super(props);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onDeleteClick = this.onDeleteClick.bind(this);\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    if (id) this.props.getEvent(id);\n  }\n\n  renderField(field) {\n    const {\n      input,\n      label,\n      type,\n      meta: { touched, error }\n    } = field;\n\n    return (\n      <TextField\n        hintText={label}\n        floatingLabelText={label}\n        type={type}\n        errorText={touched && error}\n        {...input}\n        fullWidth={true}\n      />\n    );\n  }\n\n  async onDeleteClick() {\n    const { id } = this.props.match.params;\n    await this.props.deleteEvent(id);\n    this.props.history.push(\"/\");\n  }\n\n  async onSubmit(values) {\n    await this.props.putEvent(values);\n    this.props.history.push(\"/\");\n  }\n\n  render() {\n    const { handleSubmit, pristine, submitting, invalid } = this.props;\n    return (\n      <form onSubmit={handleSubmit(this.onSubmit)}>\n        <div>\n          {\" \"}\n          <Field\n            label=\"Title\"\n            name=\"title\"\n            type=\"text\"\n            component={this.renderField}\n          />\n        </div>\n        <div>\n          {\" \"}\n          <Field\n            label=\"Body\"\n            name=\"body\"\n            type=\"text\"\n            component={this.renderField}\n          />\n        </div>\n\n        <div>\n          <input\n            type=\"submit\"\n            value=\"Submit\"\n            disabled={pristine || submitting || invalid}\n          />\n          <Link to=\"/\">Cancel</Link>\n          <Link to=\"/\" onClick={this.onDeleteClick}>\n            Delete\n          </Link>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.title) errors.title = \"Enter a title, please.\";\n  if (!values.body) errors.body = \"Enter a body, please.\";\n\n  return errors;\n};\n\nconst mapStateToProps = (state, ownProps) => {\n  const event = state.events[ownProps.match.params.id];\n  return { initialValues: event, event };\n};\nconst mapDispatchToProps = { deleteEvent, getEvent, putEvent };\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(\n  reduxForm({ validate, form: \"eventShowForm\", enableReinitialize: true })(\n    EventsShow\n  )\n);\n"]},"metadata":{},"sourceType":"module"}