{"ast":null,"code":"import axios from \"axios\";\nexport const READ_EVENTS = \"READ_EVENTS\";\nexport const READ_EVENT = \"READ_EVENT\";\nexport const CREATE_EVENTS = \"CREATE_EVENTS\";\nexport const UPDATE_EVENT = \"UPDATE_EVENTS\";\nexport const DELETE_EVENTS = \"DELETE_EVENTS\";\nconst ROOT_URL = \"https://udemy-utils.herokuapp.com/api/v1\";\nconst QUERYSTRING = \"?token=token123\";\nexport const readEvents = () => async dispatch => {\n  const response = await axios.get(\"\\b\".concat(ROOT_URL, \"/events\").concat(QUERYSTRING));\n  dispatch({\n    type: READ_EVENTS,\n    response\n  });\n};\nexport const postEvent = values => async dispatch => {\n  const response = await axios.post(\"\\b\".concat(ROOT_URL, \"/events\").concat(QUERYSTRING), values);\n  dispatch({\n    type: CREATE_EVENTS,\n    response\n  });\n};\nexport const putEvent = values => async dispatch => {\n  const response = await axios.put(\"\\b\".concat(ROOT_URL, \"/events/\").concat(values.id).concat(QUERYSTRING), values);\n  dispatch({\n    type: UPDATE_EVENT,\n    response\n  });\n};\nexport const getEvent = id => async dispatch => {\n  const response = await axios.get(\"\\b\".concat(ROOT_URL, \"/events/\").concat(id).concat(QUERYSTRING));\n  dispatch({\n    type: READ_EVENT,\n    response\n  });\n};\nexport const deleteEvent = id => async dispatch => {\n  await axios.delete(\"\\b\".concat(ROOT_URL, \"/events/\").concat(id).concat(QUERYSTRING));\n  dispatch({\n    type: DELETE_EVENTS,\n    id\n  });\n};","map":{"version":3,"sources":["/Users/tsujiokataichi/Desktop/Todo-list/src/actions/index.js"],"names":["axios","READ_EVENTS","READ_EVENT","CREATE_EVENTS","UPDATE_EVENT","DELETE_EVENTS","ROOT_URL","QUERYSTRING","readEvents","dispatch","response","get","type","postEvent","values","post","putEvent","put","id","getEvent","deleteEvent","delete"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,WAAW,GAAG,aAApB;AACP,OAAO,MAAMC,UAAU,GAAG,YAAnB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AACP,OAAO,MAAMC,YAAY,GAAG,eAArB;AACP,OAAO,MAAMC,aAAa,GAAG,eAAtB;AAEP,MAAMC,QAAQ,GAAG,0CAAjB;AACA,MAAMC,WAAW,GAAG,iBAApB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAChD,QAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,aAAcL,QAAd,oBAAgCC,WAAhC,EAAvB;AACAE,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEX,WAAR;AAAqBS,IAAAA;AAArB,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMG,SAAS,GAAGC,MAAM,IAAI,MAAML,QAAN,IAAkB;AACnD,QAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACe,IAAN,aAAeT,QAAf,oBAAiCC,WAAjC,GAAgDO,MAAhD,CAAvB;AACAL,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAET,aAAR;AAAuBO,IAAAA;AAAvB,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMM,QAAQ,GAAGF,MAAM,IAAI,MAAML,QAAN,IAAkB;AAClD,QAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACiB,GAAN,aACjBX,QADiB,qBACEQ,MAAM,CAACI,EADT,SACcX,WADd,GAErBO,MAFqB,CAAvB;AAIAL,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAER,YAAR;AAAsBM,IAAAA;AAAtB,GAAD,CAAR;AACD,CANM;AAQP,OAAO,MAAMS,QAAQ,GAAGD,EAAE,IAAI,MAAMT,QAAN,IAAkB;AAC9C,QAAMC,QAAQ,GAAG,MAAMV,KAAK,CAACW,GAAN,aAAcL,QAAd,qBAAiCY,EAAjC,SAAsCX,WAAtC,EAAvB;AACAE,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEV,UAAR;AAAoBQ,IAAAA;AAApB,GAAD,CAAR;AACD,CAHM;AAKP,OAAO,MAAMU,WAAW,GAAGF,EAAE,IAAI,MAAMT,QAAN,IAAkB;AACjD,QAAMT,KAAK,CAACqB,MAAN,aAAiBf,QAAjB,qBAAoCY,EAApC,SAAyCX,WAAzC,EAAN;AACAE,EAAAA,QAAQ,CAAC;AAAEG,IAAAA,IAAI,EAAEP,aAAR;AAAuBa,IAAAA;AAAvB,GAAD,CAAR;AACD,CAHM","sourcesContent":["import axios from \"axios\";\n\nexport const READ_EVENTS = \"READ_EVENTS\";\nexport const READ_EVENT = \"READ_EVENT\";\nexport const CREATE_EVENTS = \"CREATE_EVENTS\";\nexport const UPDATE_EVENT = \"UPDATE_EVENTS\";\nexport const DELETE_EVENTS = \"DELETE_EVENTS\";\n\nconst ROOT_URL = \"https://udemy-utils.herokuapp.com/api/v1\";\nconst QUERYSTRING = \"?token=token123\";\n\nexport const readEvents = () => async dispatch => {\n  const response = await axios.get(`\b${ROOT_URL}/events${QUERYSTRING}`);\n  dispatch({ type: READ_EVENTS, response });\n};\n\nexport const postEvent = values => async dispatch => {\n  const response = await axios.post(`\b${ROOT_URL}/events${QUERYSTRING}`, values);\n  dispatch({ type: CREATE_EVENTS, response });\n};\n\nexport const putEvent = values => async dispatch => {\n  const response = await axios.put(\n    `\b${ROOT_URL}/events/${values.id}${QUERYSTRING}`,\n    values\n  );\n  dispatch({ type: UPDATE_EVENT, response });\n};\n\nexport const getEvent = id => async dispatch => {\n  const response = await axios.get(`\b${ROOT_URL}/events/${id}${QUERYSTRING}`);\n  dispatch({ type: READ_EVENT, response });\n};\n\nexport const deleteEvent = id => async dispatch => {\n  await axios.delete(`\b${ROOT_URL}/events/${id}${QUERYSTRING}`);\n  dispatch({ type: DELETE_EVENTS, id });\n};\n"]},"metadata":{},"sourceType":"module"}